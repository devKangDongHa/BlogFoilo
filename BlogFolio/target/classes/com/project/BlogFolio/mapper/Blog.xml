<?xml version="1.0" encoding="UTF-8"?>

<!-- ====  mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 유일해야 한다.) -->
<mapper namespace="Blog">
	
	<select id="getBigCategoryList" resultType="com.project.Blog.model.BlogBigCategoryVO">		
		SELECT C.CATEGORY_NUMBER, C.CATEGORY_NAME, NVL(CNT, 0) AS CNT
		FROM
		(
		    SELECT CATEGORY_NUMBER, COUNT(*) AS CNT
		    FROM BLOGBOARD
		    GROUP BY CATEGORY_NUMBER 
		) B RIGHT OUTER JOIN BLOGCATEGORY_BIG C
		ON B.CATEGORY_NUMBER = C.CATEGORY_NUMBER
		ORDER BY CATEGORY_NUMBER
	</select>
	
	<select id="getSmallCategoryList" resultType="com.project.Blog.model.BlogSmallCategoryVO">
		SELECT C.CATEGORY_SNUMBER, C.CATEGORY_NAME, C.CATEGORY_NUMBER, NVL(CNT, 0) AS CNT
		FROM
		(
		    SELECT CATEGORY_SNUMBER, COUNT(*) AS CNT
		    FROM BLOGBOARD
		    GROUP BY CATEGORY_SNUMBER 
		) B RIGHT OUTER JOIN BLOGCATEGORY_SMALL C
		ON B.CATEGORY_SNUMBER = C.CATEGORY_SNUMBER
		ORDER BY C.CATEGORY_NUMBER, C.CATEGORY_SNUMBER
	</select>
	
	<select id="getCategoryName" resultType="String" parameterType="String">
        SELECT CATEGORY_NAME
        FROM
        (
        SELECT CATEGORY_NAME, CATEGORY_NUMBER
        FROM BLOGCATEGORY_BIG
        UNION
        SELECT CATEGORY_NAME, CATEGORY_SNUMBER
        FROM BLOGCATEGORY_SMALL
        ) V
        WHERE CATEGORY_NUMBER = #{categoryno}
	</select>
	
	<resultMap type="HashMap" id="boardMap">
		<result property="num"				column="NUM"				javaType="String" />
		<result property="thumbnail"		column="THUMBNAIL"			javaType="String" />
		<result property="title"			column="TITLE"				javaType="String" />
		<result property="content"			column="CONTENT"			jdbcType="CLOB" javaType="java.lang.String" />
		<result property="writeday"			column="WRITEDAY"			javaType="String" />
		<result property="category_number"	column="CATEGORY_NUMBER"	javaType="String" />
		<result property="category_snumber"	column="CATEGORY_SNUMBER"	javaType="String" />
		<result property="viewcount"		column="VIEWCOUNT"			javaType="String" />
		<result property="subcontent"		column="SUBCONTENT"			jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	
	<select id="getBoardView" resultMap="boardMap" parameterType="String">
		SELECT NUM, THUMBNAIL, TITLE, CONTENT, TO_CHAR(WRITEDAY, 'YYYY.MM.DD') AS WRITEDAY, CATEGORY_NUMBER, CATEGORY_SNUMBER, VIEWCOUNT, SUBCONTENT
		FROM BLOGBOARD
		WHERE NUM = #{viewno}
	</select>
	
	<insert id="editGuest" parameterType="HashMap">
		INSERT INTO BLOGGUEST(USERNO, USERID, USERNAME)
		VALUES(SEQ_BLOGGUEST.NEXTVAL, #{userid}, #{username})
	</insert>
	
	<select id="getLoginGuest" parameterType="String" resultType="com.project.Blog.model.BlogGuestVO">
		SELECT USERNO, USERID, USERNAME
		FROM BLOGGUEST
		WHERE USERID = #{userid}
	</select>
	
	<resultMap type="HashMap" id="usermap">
		<result property="userno"	column="USERNO" javaType="String" />
		<result property="userid"	column="USERID" javaType="String" />
		<result property="username"	column="USERNAME" javaType="String" />
	</resultMap>
	
	<select id="isExistUser" parameterType="HashMap" resultMap="usermap">
		SELECT USERNO, USERID, USERNAME
		FROM BLOGUSER
		WHERE USERID = #{userid} AND USERPW = #{userpw}
	</select>
	
	<select id="getTotalCountWithNOsearch" resultType="int">
		SELECT COUNT(*)
		FROM BLOGBOARD
	</select>
	
	<select id="getTotalCountWithSearch" parameterType="HashMap" resultType="int">
		SELECT COUNT(*)
		FROM BLOGBOARD
		WHERE UPPER(TITLE) LIKE UPPER('%'||#{searchWord}||'%') OR UPPER(CONTENT) LIKE UPPER('%'||#{searchWord}||'%') OR UPPER(SUBCONTENT) LIKE UPPER('%'||#{searchWord}||'%')
	</select>
	
	<select id="getTotalCountWithCategory" parameterType="HashMap" resultType="int">
		SELECT COUNT(*)
		FROM BLOGBOARD
		WHERE CATEGORY_SNUMBER = #{categoryno} OR CATEGORY_NUMBER = #{categoryno}
	</select>
	
	<select id="BlogBoardListWithPaging" parameterType="HashMap" resultType="com.project.Blog.model.BlogBoardVO">
		SELECT RNO, NUM, THUMBNAIL, TITLE, CONTENT, WRITEDAY, CATEGORY_NUMBER, CATEGORY_SNUMBER, VIEWCOUNT, SUBCONTENT
		FROM
		(
   			SELECT ROWNUM AS RNO, NUM, THUMBNAIL, TITLE, CONTENT, WRITEDAY, CATEGORY_NUMBER, CATEGORY_SNUMBER, VIEWCOUNT, SUBCONTENT
   			FROM
    		(
        		SELECT NUM, THUMBNAIL, TITLE, CONTENT, TO_CHAR(WRITEDAY, 'YYYY.MM.DD') AS WRITEDAY, CATEGORY_NUMBER, CATEGORY_SNUMBER, VIEWCOUNT, SUBCONTENT
        		FROM BLOGBOARD
        		<if test='searchWord != "" and "".equals(categoryno)'>
			    WHERE UPPER(TITLE) LIKE UPPER('%'||#{searchWord}||'%') OR UPPER(CONTENT) LIKE UPPER('%'||#{searchWord}||'%') OR UPPER(SUBCONTENT) LIKE UPPER('%'||#{searchWord}||'%')
			 	</if>
			 	<if test='categoryno != "" and "".equals(searchWord)'>
			 	WHERE CATEGORY_SNUMBER = #{categoryno} OR CATEGORY_NUMBER = #{categoryno}
			 	</if>
        		ORDER BY NUM DESC
    		) V
		) T
		WHERE RNO BETWEEN #{startRno} AND #{endRno}
	</select>
	
	<select id="getCateRecentList" parameterType="String" resultType="com.project.Blog.model.BlogBoardVO">
		SELECT ROWNUM AS RNO, NUM, TITLE, WRITEDAY
        FROM
        (
            SELECT NUM, TITLE, WRITEDAY
            FROM BLOGBOARD
            WHERE CATEGORY_SNUMBER = #{categoryno}
            ORDER BY NUM DESC
        )V
        WHERE ROWNUM BETWEEN 1 AND 5
	</select>
	
	<insert id="writeEnd" parameterType="com.project.Blog.model.BoardVO">
		INSERT INTO BLOGBOARD(NUM, TITLE, CONTENT, CATEGORY_NUMBER, CATEGORY_SNUMBER, SUBCONTENT)
		VALUES(SEQ_BLOGBOARD.NEXTVAL, #{title}, #{content}, #{category_number}, #{category_snumber}, #{subcontent})
	</insert>
	
	<insert id="writeEnd_withFile" parameterType="com.project.Blog.model.BoardVO">
		INSERT INTO BLOGBOARD(NUM, THUMBNAIL, TITLE, CONTENT, CATEGORY_NUMBER, CATEGORY_SNUMBER, SUBCONTENT, ORGFILENAME, FILESIZE)
		VALUES(SEQ_BLOGBOARD.NEXTVAL, #{thumbnail}, #{title}, #{content}, #{category_number}, #{category_snumber}, #{subcontent}, #{orgFilename}, #{fileSize}) 
	</insert>
	
</mapper>